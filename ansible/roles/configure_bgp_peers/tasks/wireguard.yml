---
- name: Empty Wireguard Directory
  file:
    state: "{{ item }}"
    path: /etc/wireguard/
  with_items:
    - absent
    - directory
  tags: adding_peers

- name: Generate Wireguard Config
  template:
    src: wg_tunnel.conf.j2
    dest: "/etc/wireguard/dn42_{{ item.key }}.conf"
  with_dict: "{{ hostvars[inventory_hostname].peerings }}"
  when: "'wireguard_tunnel' in item.value.keys()"
  tags: adding_peers

- name: Gather service state
  service_facts:
  register: services_state
  tags: adding_peers

- name: Stop Live Wireguard Services
  service:
    name: "{{ item }}"
    state: stopped
  with_items: "{{ ansible_facts.services.keys() | select('match', '^wg-quick@dn42_.*$') }}"
  tags: adding_peers

- name: Disable Live Wireguard Services
  service:
    name: "{{ item }}"
    enabled: no
  with_items: "{{ ansible_facts.services.keys() | select('match', '^wg-quick@dn42_.*$') }}"
  tags: adding_peers

- name: Start Wireguard
  service:
    name: "wg-quick@dn42_{{ item.key }}"
    state: started
    enabled: yes
  with_dict: "{{ hostvars[inventory_hostname].peerings }}"
  when: "'wireguard_tunnel' in item.value.keys()"
  tags: adding_peers
